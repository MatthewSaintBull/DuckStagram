"use strict";let image=null,applied_filter="";const checkBrowser=()=>new Promise((e,t)=>{let a=navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];"Chrome"===a[1]&&a[2]>=52&&e(a[1]),"Firefox"===a[1]&&Browser[2]>=49&&e(a[1]),t("It seems that your browser doesn't support the canvas filter function, so you can only see the filter applied to the photos but you can't still download them")}),errorPage=e=>{document.getElementById("download").innerHTML=`\n        <div class="alert alert-danger">\n            <strong>Please, Change Browser!</strong> ${e}\n        </div>\n    `},loadFilters=()=>{const e=document.getElementById("dropDownItems");filters.map(t=>{const a=document.createElement("button");a.addEventListener("click",e=>handleSelectionFilter(e.target.value)),a.appendChild(document.createTextNode(t.name)),a.classList.add("dropdown-item"),a.value=t.value,e.appendChild(a)})},checkExtension=e=>new Promise((t,a)=>{e=e.split(";");["data:image/jpeg","data:image/png"].includes(e[0])?t():a("Filetype not valid")});document.getElementById("add-image").onchange=function(){applied_filter&&document.getElementById("image").classList.remove(applied_filter);var e=new FileReader;e.onload=function(e){checkExtension(e.target.result).then(t=>{document.getElementById("image").src=e.target.result,document.getElementById("image").style.display="flex",document.getElementById("carousel-filters").style.display="block",console.log("set"),image=event.target.result,mapImages()}).catch(e=>e)},e.readAsDataURL(this.files[0])};const applyFilter=e=>new Promise((t,a)=>{var l=new Image;l.crossOrigin="",l.src=document.getElementById("image").src,l.onload=function(){var l=document.getElementById("imageCtx"),n=l.getContext("2d");l.width=document.getElementById("image").naturalWidth,l.height=document.getElementById("image").naturalHeight,void 0!==n.filter?(n.filter=e.filter,n.drawImage(this,0,0),t()):(n.drawImage(this,0,0),t()),a("error applying filter, please make sure the format is correct")}}),handleSelectionFilter=e=>{console.log(e);const t=_.find(filters,t=>t.value===e);applied_filter&&document.getElementById("image").classList.remove(applied_filter),applyFilter(t).then(e=>{document.getElementById("image").classList.add(t.value),document.getElementById("download").style.display="flex",applied_filter=t.value}).catch(e=>console.log(e))},download=()=>{saveAs(document.getElementById("imageCtx").toDataURL("image/jpeg"),"duckstagrammed.jpg")};document.onload=checkBrowser().finally(e=>{loadFilters()}).catch(e=>errorPage(e));