"use strict";let image=null,applied_filter="",loaded_filters=[];const filters_to_load=3;let filters=filters_list;Array.prototype.ontop=function(e){return new Promise((t,l)=>{this.splice(1,0,e),t()})};const checkBrowser=()=>new Promise((e,t)=>{let l=navigator.userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];"Chrome"===l[1]&&l[2]>=52&&e(l[1]),"Firefox"===l[1]&&Browser[2]>=49&&e(l[1]),t("It seems that your browser doesn't support the canvas filter function, so you can only see the filter applied to the photos but you can't still download them")}),errorPage=e=>{document.getElementById("download").innerHTML=`\n        <div class="alert alert-danger">\n            <strong>Please, Change Browser!</strong> ${e}\n        </div>\n    `},loadFilters=()=>{let e=_.take(filters,3);filters=_.xor(filters,e),loaded_filters.ontop(e).then(loaded_filters=_.flattenDeep(loaded_filters)),mapImages(),filters.length||(document.getElementById("load-filters").style.display="none")},checkExtension=e=>new Promise((t,l)=>{e=e.split(";");["data:image/jpeg","data:image/png"].includes(e[0])?t():l("Filetype not valid")});document.getElementById("add-image").onchange=function(){applied_filter&&document.getElementById("image").classList.remove(applied_filter);var e=new FileReader;e.onload=function(e){checkExtension(e.target.result).then(t=>{document.getElementById("image").src=e.target.result,document.getElementById("image").style.display="flex",document.getElementById("carousel-filters").style.display="block",console.log("set"),image=event.target.result,mapImages()}).catch(e=>e)},e.readAsDataURL(this.files[0])};const applyFilter=e=>new Promise((t,l)=>{var a=new Image;console.log("filter",e),a.crossOrigin="",a.src=document.getElementById("image").src,a.onload=function(){var a=document.getElementById("imageCtx"),o=a.getContext("2d");a.width=document.getElementById("image").naturalWidth,a.height=document.getElementById("image").naturalHeight,void 0!==o.filter?(o.filter=e.filter,o.drawImage(this,0,0),t()):(o.drawImage(this,0,0),t()),l("error applying filter, please make sure the format is correct")}}),handleSelectionFilter=e=>{const t=_.find(loaded_filters,t=>t.value===e);applied_filter&&document.getElementById("image").classList.remove(applied_filter),applyFilter(t).then(e=>{document.getElementById("image").classList.add(t.value),document.getElementById("download").style.display="flex",applied_filter=t.value}).catch(e=>console.log(e))},download=()=>{saveAs(document.getElementById("imageCtx").toDataURL("image/jpeg"),"duckstagrammed.jpg")};document.onload=checkBrowser().then(loadFilters()).catch(e=>errorPage(e));